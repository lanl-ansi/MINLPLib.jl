using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9]
@variable(m, x[x_Idx])
setlowerbound(x[5], 0.0)
setlowerbound(x[9], 0.0)
setlowerbound(x[8], 0.0)
setlowerbound(x[7], 0.0)
setlowerbound(x[4], 0.0)
setlowerbound(x[6], 0.0)
setlowerbound(x[1], 0.1)
setlowerbound(x[2], 0.1)
setlowerbound(x[3], 0.1)


# ----- Constraints ----- #
@NLconstraint(m, e1, -(log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((95-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((95-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((95-x[6])/x[9])^2)))+log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((105-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((105-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((105-x[6])/x[9])^2)))+4*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((110-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((110-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((110-x[6])/x[9])^2)))+4*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((115-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((115-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((115-x[6])/x[9])^2)))+15*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((120-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((120-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((120-x[6])/x[9])^2)))+15*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((125-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((125-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((125-x[6])/x[9])^2)))+15*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((130-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((130-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((130-x[6])/x[9])^2)))+13*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((135-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((135-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((135-x[6])/x[9])^2)))+21*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((140-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((140-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((140-x[6])/x[9])^2)))+12*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((145-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((145-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((145-x[6])/x[9])^2)))+17*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((150-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((150-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((150-x[6])/x[9])^2)))+4*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((155-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((155-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((155-x[6])/x[9])^2)))+20*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((160-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((160-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((160-x[6])/x[9])^2)))+8*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((165-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((165-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((165-x[6])/x[9])^2)))+17*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((170-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((170-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((170-x[6])/x[9])^2)))+8*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((175-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((175-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((175-x[6])/x[9])^2)))+6*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((180-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((180-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((180-x[6])/x[9])^2)))+6*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((185-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((185-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((185-x[6])/x[9])^2)))+7*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((190-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((190-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((190-x[6])/x[9])^2)))+4*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((195-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((195-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((195-x[6])/x[9])^2)))+3*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((200-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((200-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((200-x[6])/x[9])^2)))+3*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((205-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((205-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((205-x[6])/x[9])^2)))+8*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((210-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((210-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((210-x[6])/x[9])^2)))+log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((215-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((215-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((215-x[6])/x[9])^2)))+6*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((220-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((220-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((220-x[6])/x[9])^2)))+5*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((230-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((230-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((230-x[6])/x[9])^2)))+log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((235-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((235-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((235-x[6])/x[9])^2)))+7*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((240-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((240-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((240-x[6])/x[9])^2)))+log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((245-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((245-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((245-x[6])/x[9])^2)))+2*log(0.398942448887604*(x[1]/x[7]*exp(-0.5* ((260-x[4])/x[7])^2)+x[2]/x[8]*exp(-0.5* ((260-x[5])/x[8])^2)+x[3]/x[9]*exp(-0.5* ((260-x[6])/x[9])^2))))-objvar == 0.0)
@constraint(m, e2, x[1]+x[2]+x[3] == 1.0)
@constraint(m, e3, -x[4]+x[5] >= 0.0)
@constraint(m, e4, -x[5]+x[6] >= 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
