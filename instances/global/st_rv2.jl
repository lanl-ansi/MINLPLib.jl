using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
@variable(m, x[x_Idx])
setlowerbound(x[4], 0.0)
setlowerbound(x[16], 0.0)
setlowerbound(x[6], 0.0)
setlowerbound(x[14], 0.0)
setlowerbound(x[17], 0.0)
setlowerbound(x[3], 0.0)
setlowerbound(x[11], 0.0)
setlowerbound(x[12], 0.0)
setlowerbound(x[5], 0.0)
setlowerbound(x[19], 0.0)
setlowerbound(x[2], 0.0)
setlowerbound(x[20], 0.0)
setlowerbound(x[18], 0.0)
setlowerbound(x[9], 0.0)
setlowerbound(x[15], 0.0)
setlowerbound(x[1], 0.0)
setlowerbound(x[7], 0.0)
setlowerbound(x[8], 0.0)
setlowerbound(x[13], 0.0)
setlowerbound(x[10], 0.0)


# ----- Constraints ----- #
@constraint(m, e1, 6*x[1]+2*x[2]+4*x[3]+3*x[5]+4*x[6]+9*x[7]+5*x[9]+x[10]+9*x[11]+6*x[12]+7*x[14]+9*x[15]+2*x[16]+8*x[18]+2*x[19]+4*x[20] <= 405.0)
@constraint(m, e2, 6*x[1]+5*x[2]+x[3]+8*x[4]+4*x[6]+3*x[7]+9*x[8]+6*x[10]+4*x[11]+7*x[12]+5*x[13]+2*x[15]+5*x[16]+8*x[17]+9*x[19]+8*x[20] <= 450.0)
@constraint(m, e3, 8*x[2]+6*x[3]+2*x[4]+6*x[5]+4*x[7]+4*x[8]+6*x[9]+9*x[11]+4*x[12]+6*x[13]+9*x[14]+9*x[16]+9*x[17]+3*x[18]+x[20] <= 430.0)
@constraint(m, e4, 8*x[1]+7*x[3]+3*x[4]+2*x[5]+x[6]+7*x[8]+4*x[9]+7*x[10]+3*x[12]+4*x[13]+x[14]+6*x[15]+2*x[17]+8*x[18]+9*x[19] <= 360.0)
@constraint(m, e5, x[1]+5*x[2]+5*x[4]+5*x[5]+x[6]+3*x[7]+5*x[9]+7*x[10]+4*x[11]+6*x[13]+x[14]+3*x[15]+4*x[16]+3*x[18]+5*x[19]+5*x[20] <= 315.0)
@constraint(m, e6, x[1]+8*x[2]+7*x[3]+x[5]+6*x[6]+x[7]+6*x[8]+7*x[10]+3*x[11]+6*x[12]+4*x[14]+6*x[15]+x[16]+4*x[17]+x[19]+4*x[20] <= 330.0)
@constraint(m, e7, 5*x[2]+8*x[3]+7*x[4]+3*x[6]+3*x[7]+8*x[8]+6*x[9]+6*x[11]+4*x[12]+3*x[13]+4*x[15]+2*x[16]+5*x[17]+2*x[18]+4*x[20] <= 350.0)
@constraint(m, e8, x[1]+3*x[3]+2*x[4]+7*x[5]+2*x[7]+x[8]+x[9]+7*x[10]+4*x[12]+3*x[13]+5*x[14]+3*x[16]+6*x[17]+3*x[18]+x[19] <= 245.0)
@constraint(m, e9, 5*x[1]+5*x[2]+2*x[4]+x[5]+9*x[6]+7*x[8]+4*x[9]+8*x[10]+5*x[11]+2*x[13]+4*x[14]+4*x[15]+4*x[17]+8*x[18]+9*x[19]+x[20] <= 390.0)
@constraint(m, e10, x[1]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8]+x[9]+x[10]+x[11]+x[12]+x[13]+x[14]+x[15]+x[16]+x[17]+x[18]+x[19]+x[20] <= 200.0)
@NLconstraint(m, e11, -(-0.00015* (x[1])^2-0.0051*x[1]-0.00245* (x[2])^2-0.2205*x[2]-0.00095* (x[3])^2-0.0171*x[3]-0.0038* (x[4])^2-0.6384*x[4]-0.0029* (x[5])^2-0.435*x[5]-0.0024* (x[6])^2-0.4704*x[6]-0.0034* (x[7])^2-0.4556*x[7]-0.0018* (x[8])^2-0.2916*x[8]-0.00305* (x[9])^2-0.0549*x[9]-0.00025* (x[10])^2-0.0245*x[10]-0.00195* (x[11])^2-0.3588*x[11]-0.0008* (x[12])^2-0.1456*x[12]-0.0035* (x[13])^2-0.672*x[13]-0.0027* (x[14])^2-0.5184*x[14]-0.002* (x[15])^2-0.016*x[15]-0.0026* (x[16])^2-0.1404*x[16]-0.0048* (x[17])^2-0.2592*x[17]-0.00275* (x[18])^2-0.418*x[18]-0.00235* (x[19])^2-0.1081*x[19]-0.00275* (x[20])^2-0.264*x[20])+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
