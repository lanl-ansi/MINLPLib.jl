using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 6]
@variable(m, x[x_Idx])
setlowerbound(x[6], 0.0)
setlowerbound(x[1], 1.0e-6)
setupperbound(x[1], 1.0)
setlowerbound(x[2], 1.0e-6)
setupperbound(x[2], 1.0)
setlowerbound(x[3], 1.0e-6)
setupperbound(x[3], 1.0)
setlowerbound(x[4], 20.0)
setupperbound(x[4], 80.0)


# ----- Constraints ----- #
@constraint(m, e1, objvar-x[6] == 0.0)
@NLconstraint(m, e2, log(x[1]+0.48*x[2]+0.768*x[3])+x[1]/(x[1]+0.48*x[2]+0.768*x[3])+1.55*x[2]/(1.55*x[1]+x[2]+0.544*x[3])+0.566*x[3]/(0.566*x[1]+0.65*x[2]+x[3])+2787.49800065313/(229.664+x[4])-x[6] <= 10.7545020354713)
@NLconstraint(m, e3, log(1.55*x[1]+x[2]+0.544*x[3])+0.48*x[1]/(x[1]+0.48*x[2]+0.768*x[3])+x[2]/(1.55*x[1]+x[2]+0.544*x[3])+0.65*x[3]/(0.566*x[1]+0.65*x[2]+x[3])+2665.5415812027/(219.726+x[4])-x[6] <= 10.6349978691449)
@NLconstraint(m, e4, log(0.566*x[1]+0.65*x[2]+x[3])+0.768*x[1]/(x[1]+0.48*x[2]+0.768*x[3])+0.544*x[2]/(1.55*x[1]+x[2]+0.544*x[3])+x[3]/(0.566*x[1]+0.65*x[2]+x[3])+3643.31361767678/(239.726+x[4])-x[6] <= 12.9738026256517)
@NLconstraint(m, e5, (-log(x[1]+0.48*x[2]+0.768*x[3]))-(x[1]/(x[1]+0.48*x[2]+0.768*x[3])+1.55*x[2]/(1.55*x[1]+x[2]+0.544*x[3])+0.566*x[3]/(0.566*x[1]+0.65*x[2]+x[3]))-2787.49800065313/(229.664+x[4])-x[6] <= -10.7545020354713)
@NLconstraint(m, e6, (-log(1.55*x[1]+x[2]+0.544*x[3]))-(0.48*x[1]/(x[1]+0.48*x[2]+0.768*x[3])+x[2]/(1.55*x[1]+x[2]+0.544*x[3])+0.65*x[3]/(0.566*x[1]+0.65*x[2]+x[3]))-2665.5415812027/(219.726+x[4])-x[6] <= -10.6349978691449)
@NLconstraint(m, e7, (-log(0.566*x[1]+0.65*x[2]+x[3]))-(0.768*x[1]/(x[1]+0.48*x[2]+0.768*x[3])+0.544*x[2]/(1.55*x[1]+x[2]+0.544*x[3])+x[3]/(0.566*x[1]+0.65*x[2]+x[3]))-3643.31361767678/(239.726+x[4])-x[6] <= -12.9738026256517)
@constraint(m, e8, x[1]+x[2]+x[3] == 1.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
