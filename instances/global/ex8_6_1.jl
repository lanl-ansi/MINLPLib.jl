using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75]
@variable(m, x[x_Idx])
setlowerbound(x[1], 0.0)
setlowerbound(x[23], 0.0)
setlowerbound(x[11], 0.0)
setlowerbound(x[21], 0.0)
setlowerbound(x[22], 0.0)
setlowerbound(x[12], 0.0)
setlowerbound(x[1], 0.0)
setupperbound(x[1], 0.0)
setlowerbound(x[2], -5.0)
setupperbound(x[2], 5.0)
setlowerbound(x[3], -5.0)
setupperbound(x[3], 5.0)
setlowerbound(x[4], -5.0)
setupperbound(x[4], 5.0)
setlowerbound(x[5], -5.0)
setupperbound(x[5], 5.0)
setlowerbound(x[6], -5.0)
setupperbound(x[6], 5.0)
setlowerbound(x[7], -5.0)
setupperbound(x[7], 5.0)
setlowerbound(x[8], -5.0)
setupperbound(x[8], 5.0)
setlowerbound(x[9], -5.0)
setupperbound(x[9], 5.0)
setlowerbound(x[10], -5.0)
setupperbound(x[10], 5.0)
setlowerbound(x[11], 0.0)
setupperbound(x[11], 0.0)
setlowerbound(x[12], 0.0)
setupperbound(x[12], 0.0)
setlowerbound(x[13], -5.0)
setupperbound(x[13], 5.0)
setlowerbound(x[14], -5.0)
setupperbound(x[14], 5.0)
setlowerbound(x[15], -5.0)
setupperbound(x[15], 5.0)
setlowerbound(x[16], -5.0)
setupperbound(x[16], 5.0)
setlowerbound(x[17], -5.0)
setupperbound(x[17], 5.0)
setlowerbound(x[18], -5.0)
setupperbound(x[18], 5.0)
setlowerbound(x[19], -5.0)
setupperbound(x[19], 5.0)
setlowerbound(x[20], -5.0)
setupperbound(x[20], 5.0)
setlowerbound(x[21], 0.0)
setupperbound(x[21], 0.0)
setlowerbound(x[22], 0.0)
setupperbound(x[22], 0.0)
setlowerbound(x[23], 0.0)
setupperbound(x[23], 0.0)
setlowerbound(x[24], -5.0)
setupperbound(x[24], 5.0)
setlowerbound(x[25], -5.0)
setupperbound(x[25], 5.0)
setlowerbound(x[26], -5.0)
setupperbound(x[26], 5.0)
setlowerbound(x[27], -5.0)
setupperbound(x[27], 5.0)
setlowerbound(x[28], -5.0)
setupperbound(x[28], 5.0)
setlowerbound(x[29], -5.0)
setupperbound(x[29], 5.0)
setlowerbound(x[30], -5.0)
setupperbound(x[30], 5.0)


# ----- Constraints ----- #
@NLconstraint(m, e1, -( (x[31])^6-2* (x[31])^3+ (x[32])^6-2* (x[32])^3+ (x[33])^6-2* (x[33])^3+ (x[34])^6-2* (x[34])^3+ (x[35])^6-2* (x[35])^3+ (x[36])^6-2* (x[36])^3+ (x[37])^6-2* (x[37])^3+ (x[38])^6-2* (x[38])^3+ (x[39])^6-2* (x[39])^3+ (x[40])^6-2* (x[40])^3+ (x[41])^6-2* (x[41])^3+ (x[42])^6-2* (x[42])^3+ (x[43])^6-2* (x[43])^3+ (x[44])^6-2* (x[44])^3+ (x[45])^6-2* (x[45])^3+ (x[46])^6-2* (x[46])^3+ (x[47])^6-2* (x[47])^3+ (x[48])^6-2* (x[48])^3+ (x[49])^6-2* (x[49])^3+ (x[50])^6-2* (x[50])^3+ (x[51])^6-2* (x[51])^3+ (x[52])^6-2* (x[52])^3+ (x[53])^6-2* (x[53])^3+ (x[54])^6-2* (x[54])^3+ (x[55])^6-2* (x[55])^3+ (x[56])^6-2* (x[56])^3+ (x[57])^6-2* (x[57])^3+ (x[58])^6-2* (x[58])^3+ (x[59])^6-2* (x[59])^3+ (x[60])^6-2* (x[60])^3+ (x[61])^6-2* (x[61])^3+ (x[62])^6-2* (x[62])^3+ (x[63])^6-2* (x[63])^3+ (x[64])^6-2* (x[64])^3+ (x[65])^6-2* (x[65])^3+ (x[66])^6-2* (x[66])^3+ (x[67])^6-2* (x[67])^3+ (x[68])^6-2* (x[68])^3+ (x[69])^6-2* (x[69])^3+ (x[70])^6-2* (x[70])^3+ (x[71])^6-2* (x[71])^3+ (x[72])^6-2* (x[72])^3+ (x[73])^6-2* (x[73])^3+ (x[74])^6-2* (x[74])^3+ (x[75])^6-2* (x[75])^3)+objvar == 0.0)
@NLconstraint(m, e2, -1/( (x[1]-x[2])^2+ (x[11]-x[12])^2+ (x[21]-x[22])^2)+x[31] == 0.0)
@NLconstraint(m, e3, -1/( (x[1]-x[3])^2+ (x[11]-x[13])^2+ (x[21]-x[23])^2)+x[32] == 0.0)
@NLconstraint(m, e4, -1/( (x[1]-x[4])^2+ (x[11]-x[14])^2+ (x[21]-x[24])^2)+x[33] == 0.0)
@NLconstraint(m, e5, -1/( (x[1]-x[5])^2+ (x[11]-x[15])^2+ (x[21]-x[25])^2)+x[34] == 0.0)
@NLconstraint(m, e6, -1/( (x[1]-x[6])^2+ (x[11]-x[16])^2+ (x[21]-x[26])^2)+x[35] == 0.0)
@NLconstraint(m, e7, -1/( (x[1]-x[7])^2+ (x[11]-x[17])^2+ (x[21]-x[27])^2)+x[36] == 0.0)
@NLconstraint(m, e8, -1/( (x[1]-x[8])^2+ (x[11]-x[18])^2+ (x[21]-x[28])^2)+x[37] == 0.0)
@NLconstraint(m, e9, -1/( (x[1]-x[9])^2+ (x[11]-x[19])^2+ (x[21]-x[29])^2)+x[38] == 0.0)
@NLconstraint(m, e10, -1/( (x[1]-x[10])^2+ (x[11]-x[20])^2+ (x[21]-x[30])^2)+x[39] == 0.0)
@NLconstraint(m, e11, -1/( (x[2]-x[3])^2+ (x[12]-x[13])^2+ (x[22]-x[23])^2)+x[40] == 0.0)
@NLconstraint(m, e12, -1/( (x[2]-x[4])^2+ (x[12]-x[14])^2+ (x[22]-x[24])^2)+x[41] == 0.0)
@NLconstraint(m, e13, -1/( (x[2]-x[5])^2+ (x[12]-x[15])^2+ (x[22]-x[25])^2)+x[42] == 0.0)
@NLconstraint(m, e14, -1/( (x[2]-x[6])^2+ (x[12]-x[16])^2+ (x[22]-x[26])^2)+x[43] == 0.0)
@NLconstraint(m, e15, -1/( (x[2]-x[7])^2+ (x[12]-x[17])^2+ (x[22]-x[27])^2)+x[44] == 0.0)
@NLconstraint(m, e16, -1/( (x[2]-x[8])^2+ (x[12]-x[18])^2+ (x[22]-x[28])^2)+x[45] == 0.0)
@NLconstraint(m, e17, -1/( (x[2]-x[9])^2+ (x[12]-x[19])^2+ (x[22]-x[29])^2)+x[46] == 0.0)
@NLconstraint(m, e18, -1/( (x[2]-x[10])^2+ (x[12]-x[20])^2+ (x[22]-x[30])^2)+x[47] == 0.0)
@NLconstraint(m, e19, -1/( (x[3]-x[4])^2+ (x[13]-x[14])^2+ (x[23]-x[24])^2)+x[48] == 0.0)
@NLconstraint(m, e20, -1/( (x[3]-x[5])^2+ (x[13]-x[15])^2+ (x[23]-x[25])^2)+x[49] == 0.0)
@NLconstraint(m, e21, -1/( (x[3]-x[6])^2+ (x[13]-x[16])^2+ (x[23]-x[26])^2)+x[50] == 0.0)
@NLconstraint(m, e22, -1/( (x[3]-x[7])^2+ (x[13]-x[17])^2+ (x[23]-x[27])^2)+x[51] == 0.0)
@NLconstraint(m, e23, -1/( (x[3]-x[8])^2+ (x[13]-x[18])^2+ (x[23]-x[28])^2)+x[52] == 0.0)
@NLconstraint(m, e24, -1/( (x[3]-x[9])^2+ (x[13]-x[19])^2+ (x[23]-x[29])^2)+x[53] == 0.0)
@NLconstraint(m, e25, -1/( (x[3]-x[10])^2+ (x[13]-x[20])^2+ (x[23]-x[30])^2)+x[54] == 0.0)
@NLconstraint(m, e26, -1/( (x[4]-x[5])^2+ (x[14]-x[15])^2+ (x[24]-x[25])^2)+x[55] == 0.0)
@NLconstraint(m, e27, -1/( (x[4]-x[6])^2+ (x[14]-x[16])^2+ (x[24]-x[26])^2)+x[56] == 0.0)
@NLconstraint(m, e28, -1/( (x[4]-x[7])^2+ (x[14]-x[17])^2+ (x[24]-x[27])^2)+x[57] == 0.0)
@NLconstraint(m, e29, -1/( (x[4]-x[8])^2+ (x[14]-x[18])^2+ (x[24]-x[28])^2)+x[58] == 0.0)
@NLconstraint(m, e30, -1/( (x[4]-x[9])^2+ (x[14]-x[19])^2+ (x[24]-x[29])^2)+x[59] == 0.0)
@NLconstraint(m, e31, -1/( (x[4]-x[10])^2+ (x[14]-x[20])^2+ (x[24]-x[30])^2)+x[60] == 0.0)
@NLconstraint(m, e32, -1/( (x[5]-x[6])^2+ (x[15]-x[16])^2+ (x[25]-x[26])^2)+x[61] == 0.0)
@NLconstraint(m, e33, -1/( (x[5]-x[7])^2+ (x[15]-x[17])^2+ (x[25]-x[27])^2)+x[62] == 0.0)
@NLconstraint(m, e34, -1/( (x[5]-x[8])^2+ (x[15]-x[18])^2+ (x[25]-x[28])^2)+x[63] == 0.0)
@NLconstraint(m, e35, -1/( (x[5]-x[9])^2+ (x[15]-x[19])^2+ (x[25]-x[29])^2)+x[64] == 0.0)
@NLconstraint(m, e36, -1/( (x[5]-x[10])^2+ (x[15]-x[20])^2+ (x[25]-x[30])^2)+x[65] == 0.0)
@NLconstraint(m, e37, -1/( (x[6]-x[7])^2+ (x[16]-x[17])^2+ (x[26]-x[27])^2)+x[66] == 0.0)
@NLconstraint(m, e38, -1/( (x[6]-x[8])^2+ (x[16]-x[18])^2+ (x[26]-x[28])^2)+x[67] == 0.0)
@NLconstraint(m, e39, -1/( (x[6]-x[9])^2+ (x[16]-x[19])^2+ (x[26]-x[29])^2)+x[68] == 0.0)
@NLconstraint(m, e40, -1/( (x[6]-x[10])^2+ (x[16]-x[20])^2+ (x[26]-x[30])^2)+x[69] == 0.0)
@NLconstraint(m, e41, -1/( (x[7]-x[8])^2+ (x[17]-x[18])^2+ (x[27]-x[28])^2)+x[70] == 0.0)
@NLconstraint(m, e42, -1/( (x[7]-x[9])^2+ (x[17]-x[19])^2+ (x[27]-x[29])^2)+x[71] == 0.0)
@NLconstraint(m, e43, -1/( (x[7]-x[10])^2+ (x[17]-x[20])^2+ (x[27]-x[30])^2)+x[72] == 0.0)
@NLconstraint(m, e44, -1/( (x[8]-x[9])^2+ (x[18]-x[19])^2+ (x[28]-x[29])^2)+x[73] == 0.0)
@NLconstraint(m, e45, -1/( (x[8]-x[10])^2+ (x[18]-x[20])^2+ (x[28]-x[30])^2)+x[74] == 0.0)
@NLconstraint(m, e46, -1/( (x[9]-x[10])^2+ (x[19]-x[20])^2+ (x[29]-x[30])^2)+x[75] == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
