using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[2, 3, 4, 5]
@variable(m, x[x_Idx])
setlowerbound(x[2], 1.0e-7)
setupperbound(x[2], 0.5)
setlowerbound(x[3], 1.0e-7)
setupperbound(x[3], 0.5)
setlowerbound(x[4], 1.0e-7)
setupperbound(x[4], 0.5)
setlowerbound(x[5], 1.0e-7)
setupperbound(x[5], 0.5)


# ----- Constraints ----- #
@NLconstraint(m, e1, -((31.4830434782609*x[2]+6*x[4])*log(4.8274*x[2]+0.92*x[4])-1.36551138119385*x[2]+2.8555953099828*x[4]+11.5030434782609*x[2]*log(x[2]/(4.8274*x[2]+0.92*x[4]))+20.98*x[2]*log(x[2]/(4.196*x[2]+1.4*x[4]))+7*x[4]*log(x[4]/(4.196*x[2]+1.4*x[4]))+(4.196*x[2]+1.4*x[4])*log(4.196*x[2]+1.4*x[4])+1.62*x[2]*log(x[2]/(7.52678200680961*x[2]+0.443737968424621*x[4]))+0.848*x[2]*log(x[2]/(7.52678200680961*x[2]+0.443737968424621*x[4]))+1.728*x[2]*log(x[2]/(1.82245052351472*x[2]+1.4300083598626*x[4]))+1.4*x[4]*log(x[4]/(0.504772348000588*x[2]+1.4*x[4]))+(31.4830434782609*x[3]+6*x[5])*log(4.8274*x[3]+0.92*x[5])-1.36551138119385*x[3]+2.8555953099828*x[5]+11.5030434782609*x[3]*log(x[3]/(4.8274*x[3]+0.92*x[5]))+20.98*x[3]*log(x[3]/(4.196*x[3]+1.4*x[5]))+7*x[5]*log(x[5]/(4.196*x[3]+1.4*x[5]))+(4.196*x[3]+1.4*x[5])*log(4.196*x[3]+1.4*x[5])+1.62*x[3]*log(x[3]/(7.52678200680961*x[3]+0.443737968424621*x[5]))+0.848*x[3]*log(x[3]/(7.52678200680961*x[3]+0.443737968424621*x[5]))+1.728*x[3]*log(x[3]/(1.82245052351472*x[3]+1.4300083598626*x[5]))+1.4*x[5]*log(x[5]/(0.504772348000588*x[3]+1.4*x[5]))-35.6790434782609*x[2]*log(x[2])-7.4*x[4]*log(x[4])-35.6790434782609*x[3]*log(x[3])-7.4*x[5]*log(x[5]))+objvar == 0.0)
@constraint(m, e2, x[2]+x[3] == 0.5)
@constraint(m, e3, x[4]+x[5] == 0.5)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
