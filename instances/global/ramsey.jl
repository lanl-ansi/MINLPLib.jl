using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
@variable(m, x[x_Idx])
setlowerbound(x[1], 3.0)
setupperbound(x[1], 3.0)
setlowerbound(x[2], 3.0)
setlowerbound(x[3], 3.0)
setlowerbound(x[4], 3.0)
setlowerbound(x[5], 3.0)
setlowerbound(x[6], 3.0)
setlowerbound(x[7], 3.0)
setlowerbound(x[8], 3.0)
setlowerbound(x[9], 3.0)
setlowerbound(x[10], 3.0)
setlowerbound(x[11], 3.0)
setlowerbound(x[12], 0.95)
setlowerbound(x[13], 0.95)
setlowerbound(x[14], 0.95)
setlowerbound(x[15], 0.95)
setlowerbound(x[16], 0.95)
setlowerbound(x[17], 0.95)
setlowerbound(x[18], 0.95)
setlowerbound(x[19], 0.95)
setlowerbound(x[20], 0.95)
setlowerbound(x[21], 0.95)
setlowerbound(x[22], 0.95)
setlowerbound(x[23], 0.05)
setupperbound(x[23], 0.05)
setlowerbound(x[24], 0.05)
setupperbound(x[24], 0.0575)
setlowerbound(x[25], 0.05)
setupperbound(x[25], 0.066125)
setlowerbound(x[26], 0.05)
setupperbound(x[26], 0.07604375)
setlowerbound(x[27], 0.05)
setupperbound(x[27], 0.0874503125)
setlowerbound(x[28], 0.05)
setupperbound(x[28], 0.100567859375)
setlowerbound(x[29], 0.05)
setupperbound(x[29], 0.11565303828125)
setlowerbound(x[30], 0.05)
setupperbound(x[30], 0.133000994023437)
setlowerbound(x[31], 0.05)
setupperbound(x[31], 0.152951143126953)
setlowerbound(x[32], 0.05)
setupperbound(x[32], 0.175893814595996)
setlowerbound(x[33], 0.05)
setupperbound(x[33], 0.202277886785395)


# ----- Constraints ----- #
@NLconstraint(m, e1, 0.759835685651593*x[1]^0.25-x[12]-x[23] == 0.0)
@NLconstraint(m, e2, 0.77686866556676*x[2]^0.25-x[13]-x[24] == 0.0)
@NLconstraint(m, e3, 0.794283468039448*x[3]^0.25-x[14]-x[25] == 0.0)
@NLconstraint(m, e4, 0.812088652256959*x[4]^0.25-x[15]-x[26] == 0.0)
@NLconstraint(m, e5, 0.830292969275008*x[5]^0.25-x[16]-x[27] == 0.0)
@NLconstraint(m, e6, 0.848905366318769*x[6]^0.25-x[17]-x[28] == 0.0)
@NLconstraint(m, e7, 0.867934991180342*x[7]^0.25-x[18]-x[29] == 0.0)
@NLconstraint(m, e8, 0.88739119671479*x[8]^0.25-x[19]-x[30] == 0.0)
@NLconstraint(m, e9, 0.907283545436972*x[9]^0.25-x[20]-x[31] == 0.0)
@NLconstraint(m, e10, 0.92762181422141*x[10]^0.25-x[21]-x[32] == 0.0)
@NLconstraint(m, e11, 0.948415999107521*x[11]^0.25-x[22]-x[33] == 0.0)
@constraint(m, e12, -x[1]+x[2]-x[23] == 0.0)
@constraint(m, e13, -x[2]+x[3]-x[24] == 0.0)
@constraint(m, e14, -x[3]+x[4]-x[25] == 0.0)
@constraint(m, e15, -x[4]+x[5]-x[26] == 0.0)
@constraint(m, e16, -x[5]+x[6]-x[27] == 0.0)
@constraint(m, e17, -x[6]+x[7]-x[28] == 0.0)
@constraint(m, e18, -x[7]+x[8]-x[29] == 0.0)
@constraint(m, e19, -x[8]+x[9]-x[30] == 0.0)
@constraint(m, e20, -x[9]+x[10]-x[31] == 0.0)
@constraint(m, e21, -x[10]+x[11]-x[32] == 0.0)
@constraint(m, e22, 0.03*x[11]-x[33] <= 0.0)
@NLconstraint(m, e23, -(0.95*log(x[12])+0.9025*log(x[13])+0.857375*log(x[14])+0.81450625*log(x[15])+0.7737809375*log(x[16])+0.735091890625*log(x[17])+0.69833729609375*log(x[18])+0.663420431289062*log(x[19])+0.630249409724609*log(x[20])+0.598736939238379*log(x[21])+11.3760018455292*log(x[22]))-objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
