using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[2, 3, 4]
@variable(m, x[x_Idx])
setlowerbound(x[2], 1.0e-6)
setupperbound(x[2], 1.0)
setlowerbound(x[3], 1.0e-6)
setupperbound(x[3], 1.0)
setlowerbound(x[4], 1.0e-6)
setupperbound(x[4], 1.0)


# ----- Constraints ----- #
@NLconstraint(m, e1, -((10.4807341082197*x[2]+38.5043409542885*x[3]+8.73945638067505*x[4])*log(2.4088*x[2]+8.8495*x[3]+2.0086*x[4])+0.303602206615077*x[2]-3.98949602721008*x[3]+0.0423576909050935*x[4]+0.240734108219679*x[2]*log(x[2])+2.64434095428848*x[3]*log(x[3])+0.399456380675047*x[4]*log(x[4])-0.240734108219679*x[2]*log(2.4088*x[2]+8.8495*x[3]+2.0086*x[4])-2.64434095428848*x[3]*log(2.4088*x[2]+8.8495*x[3]+2.0086*x[4])-0.399456380675047*x[4]*log(2.4088*x[2]+8.8495*x[3]+2.0086*x[4])+11.24*x[2]*log(x[2])+36.86*x[3]*log(x[3])+9.34*x[4]*log(x[4])-11.24*x[2]*log(2.248*x[2]+7.372*x[3]+1.868*x[4])-36.86*x[3]*log(2.248*x[2]+7.372*x[3]+1.868*x[4])-9.34*x[4]*log(2.248*x[2]+7.372*x[3]+1.868*x[4])+(2.248*x[2]+7.372*x[3]+1.868*x[4])*log(2.248*x[2]+7.372*x[3]+1.868*x[4])+2.248*x[2]*log(x[2])+7.372*x[3]*log(x[3])+1.868*x[4]*log(x[4])-2.248*x[2]*log(2.248*x[2]+5.82088173817021*x[3]+0.382446861901943*x[4])-7.372*x[3]*log(0.972461133672523*x[2]+7.372*x[3]+1.1893141713454*x[4])-1.868*x[4]*log(1.86752460515164*x[2]+2.61699842799583*x[3]+1.868*x[4])-12.7287341082197*x[2]*log(x[2])-45.8763409542885*x[3]*log(x[3])-10.607456380675*x[4]*log(x[4]))+objvar == 0.0)
@constraint(m, e2, x[2]+x[3]+x[4] == 1.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
