using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
i_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
@variable(m, i[i_Idx])
setcategory(i[8], :Int)
setcategory(i[12], :Int)
setcategory(i[19], :Int)
setcategory(i[5], :Int)
setcategory(i[3], :Int)
setcategory(i[2], :Int)
setcategory(i[13], :Int)
setcategory(i[6], :Int)
setcategory(i[4], :Int)
setcategory(i[9], :Int)
setcategory(i[14], :Int)
setcategory(i[16], :Int)
setcategory(i[10], :Int)
setcategory(i[15], :Int)
setcategory(i[17], :Int)
setcategory(i[7], :Int)
setcategory(i[20], :Int)
setcategory(i[11], :Int)
setcategory(i[1], :Int)
setcategory(i[18], :Int)
setupperbound(i[1], 100.0)
setupperbound(i[2], 100.0)
setupperbound(i[3], 100.0)
setupperbound(i[4], 100.0)
setupperbound(i[5], 100.0)
setupperbound(i[6], 100.0)
setupperbound(i[7], 100.0)
setupperbound(i[8], 100.0)
setupperbound(i[9], 100.0)
setupperbound(i[10], 100.0)
setupperbound(i[11], 100.0)
setupperbound(i[12], 100.0)
setupperbound(i[13], 100.0)
setupperbound(i[14], 100.0)
setupperbound(i[15], 100.0)
setupperbound(i[16], 100.0)
setupperbound(i[17], 100.0)
setupperbound(i[18], 100.0)
setupperbound(i[19], 100.0)
setupperbound(i[20], 100.0)


# ----- Constraints ----- #
@constraint(m, e1, 8*i[1]+5*i[6]+4*i[7]+6*i[12]+6*i[13]+9*i[14]+5*i[19]+i[20] <= 220.0)
@constraint(m, e2, 3*i[1]+4*i[2]+3*i[7]+7*i[8]+4*i[13]+9*i[14]+3*i[15]+2*i[20] <= 175.0)
@constraint(m, e3, 2*i[2]+i[3]+6*i[8]+8*i[9]+9*i[14]+9*i[15]+8*i[16] <= 215.0)
@constraint(m, e4, 7*i[3]+i[4]+7*i[9]+9*i[10]+2*i[15]+4*i[16]+9*i[17] <= 195.0)
@constraint(m, e5, 4*i[4]+4*i[5]+i[10]+3*i[11]+7*i[16]+2*i[17]+8*i[18] <= 145.0)
@constraint(m, e6, 9*i[5]+5*i[6]+5*i[11]+7*i[12]+i[17]+4*i[18]+6*i[19] <= 185.0)
@constraint(m, e7, 5*i[1]+5*i[6]+3*i[7]+8*i[12]+5*i[13]+9*i[18]+9*i[19]+i[20] <= 225.0)
@constraint(m, e8, i[1]+9*i[2]+9*i[7]+3*i[8]+9*i[13]+7*i[14]+4*i[19]+i[20] <= 215.0)
@constraint(m, e9, 3*i[1]+6*i[2]+3*i[3]+4*i[8]+2*i[9]+6*i[14]+3*i[15]+8*i[19]+i[20] <= 175.0)
@constraint(m, e10, i[2]+2*i[3]+8*i[4]+4*i[9]+i[10]+9*i[15]+6*i[16] <= 155.0)
@constraint(m, e11, 9*i[3]+3*i[4]+6*i[5]+i[10]+6*i[11]+9*i[16]+8*i[17] <= 210.0)
@constraint(m, e12, 6*i[4]+3*i[5]+3*i[6]+6*i[11]+3*i[12]+8*i[17]+9*i[18] <= 190.0)
@constraint(m, e13, 9*i[5]+8*i[6]+2*i[7]+7*i[12]+8*i[13]+4*i[18]+3*i[19] <= 205.0)
@constraint(m, e14, 4*i[1]+6*i[6]+9*i[7]+i[8]+6*i[13]+9*i[14]+8*i[19]+6*i[20] <= 245.0)
@constraint(m, e15, 7*i[1]+3*i[2]+7*i[7]+4*i[8]+2*i[9]+i[14]+3*i[15]+5*i[20] <= 160.0)
@constraint(m, e16, 7*i[2]+9*i[3]+7*i[8]+9*i[9]+5*i[10]+2*i[15]+6*i[16] <= 225.0)
@constraint(m, e17, 6*i[3]+9*i[4]+8*i[9]+4*i[10]+2*i[11]+6*i[16]+4*i[17] <= 195.0)
@constraint(m, e18, 5*i[4]+5*i[5]+7*i[10]+8*i[11]+9*i[12]+8*i[17]+6*i[18] <= 240.0)
@constraint(m, e19, 7*i[5]+5*i[6]+6*i[11]+2*i[12]+8*i[13]+6*i[18]+9*i[19] <= 215.0)
@constraint(m, e20, i[1]+i[2]+i[3]+i[4]+i[5]+i[6]+i[7]+i[8]+i[9]+i[10]+i[11]+i[12]+i[13]+i[14]+i[15]+i[16]+i[17]+i[18]+i[19]+i[20] <= 200.0)
@constraint(m, e21, -(0.00055*i[1]*i[1]-0.0583*i[1]+0.0019*i[2]*i[2]-0.2318*i[2]+0.0002*i[3]*i[3]+0.0108*i[3]+0.00095*i[4]*i[4]-0.1634*i[4]+0.0046*i[5]*i[5]-0.138*i[5]+0.0035*i[6]*i[6]+0.357*i[6]+0.00315*i[7]*i[7]-0.1953*i[7]+0.00475*i[8]*i[8]+0.361*i[8]+0.0048*i[9]*i[9]-0.1824*i[9]+0.003*i[10]*i[10]+0.162*i[10]+0.00265*i[11]*i[11]-0.4346*i[11]+0.0017*i[12]*i[12]-0.1054*i[12]+0.0012*i[13]*i[13]+0.2376*i[13]+0.00295*i[14]*i[14]-0.0059*i[14]+0.00315*i[15]*i[15]+0.189*i[15]+0.0021*i[16]*i[16]-0.0252*i[16]+0.00225*i[17]*i[17]-0.099*i[17]+0.0034*i[18]*i[18]-0.3604*i[18]+0.001*i[19]*i[19]+0.022*i[19]+0.00305*i[20]*i[20]-0.3294*i[20])+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)
m = m 		 # model get returned when including this script. 
