using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
@variable(m, x[x_Idx])
b_Idx = Any[23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
@variable(m, b[b_Idx])
setcategory(b[35], :Bin)
setlowerbound(x[4], 0.0)
setlowerbound(x[16], 0.0)
setlowerbound(x[6], 0.0)
setcategory(b[27], :Bin)
setlowerbound(x[14], 0.0)
setlowerbound(x[17], 0.0)
setlowerbound(x[3], 0.0)
setcategory(b[33], :Bin)
setlowerbound(x[11], 0.0)
setcategory(b[30], :Bin)
setcategory(b[31], :Bin)
setlowerbound(x[22], 0.0)
setcategory(b[29], :Bin)
setlowerbound(x[12], 0.0)
setcategory(b[25], :Bin)
setlowerbound(x[5], 0.0)
setlowerbound(x[19], 0.0)
setcategory(b[32], :Bin)
setcategory(b[34], :Bin)
setlowerbound(x[2], 0.0)
setlowerbound(x[20], 0.0)
setcategory(b[24], :Bin)
setcategory(b[23], :Bin)
setlowerbound(x[18], 0.0)
setlowerbound(x[9], 0.0)
setlowerbound(x[15], 0.0)
setlowerbound(x[8], 0.0)
setlowerbound(x[7], 0.0)
setlowerbound(x[13], 0.0)
setcategory(b[26], :Bin)
setlowerbound(x[21], 0.0)
setcategory(b[28], :Bin)
setcategory(b[36], :Bin)
setlowerbound(x[10], 0.0)


# ----- Constraints ----- #
@constraint(m, e1, x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8] == 1.0)
@constraint(m, e2, x[2]-x[9]+x[16] == 0.2)
@constraint(m, e3, x[3]-x[10]+x[17] == 0.2)
@constraint(m, e4, x[4]-x[11]+x[18] == 0.0)
@constraint(m, e5, x[5]-x[12]+x[19] == 0.0)
@constraint(m, e6, x[6]-x[13]+x[20] == 0.2)
@constraint(m, e7, x[7]-x[14]+x[21] == 0.2)
@constraint(m, e8, x[8]-x[15]+x[22] == 0.2)
@constraint(m, e9, x[9]+x[10]+x[11]+x[12]+x[13]+x[14]+x[15] <= 0.3)
@constraint(m, e10, x[9]-0.11*b[23] <= 0.0)
@constraint(m, e11, x[10]-0.1*b[24] <= 0.0)
@constraint(m, e12, x[11]-0.07*b[25] <= 0.0)
@constraint(m, e13, x[12]-0.11*b[26] <= 0.0)
@constraint(m, e14, x[13]-0.2*b[27] <= 0.0)
@constraint(m, e15, x[14]-0.1*b[28] <= 0.0)
@constraint(m, e16, x[15]-0.1*b[29] <= 0.0)
@constraint(m, e17, x[9]-0.03*b[23] >= 0.0)
@constraint(m, e18, x[10]-0.04*b[24] >= 0.0)
@constraint(m, e19, x[11]-0.04*b[25] >= 0.0)
@constraint(m, e20, x[12]-0.03*b[26] >= 0.0)
@constraint(m, e21, x[13]-0.03*b[27] >= 0.0)
@constraint(m, e22, x[14]-0.03*b[28] >= 0.0)
@constraint(m, e23, x[15]-0.03*b[29] >= 0.0)
@constraint(m, e24, x[16]-0.2*b[30] <= 0.0)
@constraint(m, e25, x[17]-0.15*b[31] <= 0.0)
@constraint(m, e26, x[18] <= 0.0)
@constraint(m, e27, x[19] <= 0.0)
@constraint(m, e28, x[20]-0.1*b[34] <= 0.0)
@constraint(m, e29, x[21]-0.15*b[35] <= 0.0)
@constraint(m, e30, x[22]-0.2*b[36] <= 0.0)
@constraint(m, e31, x[16]-0.02*b[30] >= 0.0)
@constraint(m, e32, x[17]-0.02*b[31] >= 0.0)
@constraint(m, e33, x[18]-0.04*b[32] >= 0.0)
@constraint(m, e34, x[19]-0.04*b[33] >= 0.0)
@constraint(m, e35, x[20]-0.04*b[34] >= 0.0)
@constraint(m, e36, x[21]-0.04*b[35] >= 0.0)
@constraint(m, e37, x[22]-0.04*b[36] >= 0.0)
@constraint(m, e38, b[23]+b[30] <= 1.0)
@constraint(m, e39, b[24]+b[31] <= 1.0)
@constraint(m, e40, b[25]+b[32] <= 1.0)
@constraint(m, e41, b[26]+b[33] <= 1.0)
@constraint(m, e42, b[27]+b[34] <= 1.0)
@constraint(m, e43, b[28]+b[35] <= 1.0)
@constraint(m, e44, b[29]+b[36] <= 1.0)
@NLconstraint(m, e45, -(42.18*x[2]*x[2]+40.36*x[2]*x[3]+21.76*x[2]*x[4]+10.6*x[2]*x[5]+24.64*x[2]*x[6]+47.68*x[2]*x[7]+34.82*x[2]*x[8]+70.89*x[3]*x[3]+43.16*x[3]*x[4]+30.82*x[3]*x[5]+46.48*x[3]*x[6]+47.6*x[3]*x[7]+25.24*x[3]*x[8]+25.51*x[4]*x[4]+19.2*x[4]*x[5]+45.26*x[4]*x[6]+26.44*x[4]*x[7]+9.4*x[4]*x[8]+22.33*x[5]*x[5]+20.64*x[5]*x[6]+20.92*x[5]*x[7]+2*x[5]*x[8]+30.01*x[6]*x[6]+32.72*x[6]*x[7]+14.4*x[6]*x[8]+42.23*x[7]*x[7]+19.8*x[7]*x[8]+16.42*x[8]*x[8]-0.06435*x[2]-0.0548*x[3]-0.02505*x[4]-0.0762*x[5]-0.03815*x[6]-0.0927*x[7]-0.031*x[8])+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
