using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3]
@variable(m, x[x_Idx])
setlowerbound(x[1], -10000.0)
setupperbound(x[1], 10000.0)
setlowerbound(x[2], -10000.0)
setupperbound(x[2], 10000.0)


# ----- Constraints ----- #
@constraint(m, e1, -( (1-x[1]-x[2])^2+ (1-x[1]-x[2])^2+ (3-x[1]-0.5*x[2])^2+ (4-x[1]-0.333333333333333*x[2])^2+ (7-x[1]-0.25*x[2])^2+ (11-x[1]-0.2*x[2])^2+ (18-x[1]-0.166666666666667*x[2])^2+ (29-x[1]-0.142857142857143*x[2])^2+ (47-x[1]-0.125*x[2])^2+ (76-x[1]-0.111111111111111*x[2])^2+ (123-x[1]-0.1*x[2])^2+ (199-x[1]-0.0909090909090909*x[2])^2+ (322-x[1]-0.0833333333333333*x[2])^2+ (521-x[1]-0.0769230769230769*x[2])^2+ (843-x[1]-0.0714285714285714*x[2])^2+ (1364-x[1]-0.0666666666666667*x[2])^2+ (2207-x[1]-0.0625*x[2])^2+ (3571-x[1]-0.0588235294117647*x[2])^2+ (5778-x[1]-0.0555555555555556*x[2])^2+ (9529-x[1]-0.0526315789473684*x[2])^2+ (15307-x[1]-0.05*x[2])^2+ (24836-x[1]-0.0476190476190476*x[2])^2)+x[3] == 0.0)


# ----- Objective ----- #
@objective(m, Min, x[3])
m = m 		 # model get returned when including this script. 
