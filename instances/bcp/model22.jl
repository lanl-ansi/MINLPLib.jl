using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3]
@variable(m, x[x_Idx])
setlowerbound(x[1], 0.0)
setlowerbound(x[2], 0.0)
setupperbound(x[1], 1000.0)
setupperbound(x[2], 1000.0)


# ----- Constraints ----- #
@NLconstraint(m, e1, -( (10.07-77.6*x[1]*x[2]*(1+77.6*x[2])^(-1))^2+ (14.73-114.9*x[1]*x[2]*(1+114.9*x[2])^(-1))^2+ (17.94-141.1*x[1]*x[2]*(1+141.1*x[2])^(-1))^2+ (23.93-190.8*x[1]*x[2]*(1+190.8*x[2])^(-1))^2+ (29.61-239.9*x[1]*x[2]*(1+239.9*x[2])^(-1))^2+ (35.18-289*x[1]*x[2]*(1+289*x[2])^(-1))^2+ (40.02-332.8*x[1]*x[2]*(1+332.8*x[2])^(-1))^2+ (44.82-378.4*x[1]*x[2]*(1+378.4*x[2])^(-1))^2+ (50.76-434.8*x[1]*x[2]*(1+434.8*x[2])^(-1))^2+ (55.05-477.3*x[1]*x[2]*(1+477.3*x[2])^(-1))^2+ (61.01-536.8*x[1]*x[2]*(1+536.8*x[2])^(-1))^2+ (66.4-593.1*x[1]*x[2]*(1+593.1*x[2])^(-1))^2+ (75.47-689.1*x[1]*x[2]*(1+689.1*x[2])^(-1))^2+ (81.78-760*x[1]*x[2]*(1+760*x[2])^(-1))^2)+x[3] == 0.0)


# ----- Objective ----- #
@objective(m, Min, x[3])
m = m 		 # model get returned when including this script. 
