using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3, 4]
@variable(m, x[x_Idx])
setlowerbound(x[1], 0.0)
setlowerbound(x[2], 0.0)
setupperbound(x[3], 0.0)
setupperbound(x[1], 10.0)
setupperbound(x[2], 10.0)
setlowerbound(x[3], -0.1)


# ----- Constraints ----- #
@NLconstraint(m, e1, -( (2.70805020110221+exp(-180*x[3])*x[2]-x[1])^2+ (2.83321334405622+exp(-180*x[3])*x[2]-x[1])^2+ (2.7408400239252+exp(-180*x[3])*x[2]-x[1])^2+ (2.80336038090653+exp(-180*x[3])*x[2]-x[1])^2+ (2.7408400239252+exp(-225*x[3])*x[2]-x[1])^2+ (2.70805020110221+exp(-225*x[3])*x[2]-x[1])^2+ (2.77258872223978+exp(-225*x[3])*x[2]-x[1])^2+ (2.67414864942653+exp(-225*x[3])*x[2]-x[1])^2+ (2.70805020110221+exp(-250*x[3])*x[2]-x[1])^2+ (2.67414864942653+exp(-250*x[3])*x[2]-x[1])^2+ (2.52572864430826+exp(-250*x[3])*x[2]-x[1])^2+ (2.39789527279837+exp(-250*x[3])*x[2]-x[1])^2+ (2.63905732961526+exp(-275*x[3])*x[2]-x[1])^2+ (2.56494935746154+exp(-275*x[3])*x[2]-x[1])^2+ (2.63905732961526+exp(-275*x[3])*x[2]-x[1])^2+ (2.4423470353692+exp(-275*x[3])*x[2]-x[1])^2+ (2.63905732961526+2*exp(-180*x[3])*x[2]-x[1])^2+ (2.77258872223978+2*exp(-180*x[3])*x[2]-x[1])^2+ (2.56494935746154+2*exp(-180*x[3])*x[2]-x[1])^2+ (2.60268968544438+2*exp(-180*x[3])*x[2]-x[1])^2+ (2.56494935746154+2*exp(-225*x[3])*x[2]-x[1])^2+ (2.60268968544438+2*exp(-225*x[3])*x[2]-x[1])^2+ (2.52572864430826+2*exp(-225*x[3])*x[2]-x[1])^2+ (2.52572864430826+2*exp(-225*x[3])*x[2]-x[1])^2+ (2.52572864430826+2*exp(-250*x[3])*x[2]-x[1])^2+ (2.484906649788+2*exp(-250*x[3])*x[2]-x[1])^2+ (2.4423470353692+2*exp(-250*x[3])*x[2]-x[1])^2+ (2.484906649788+2*exp(-250*x[3])*x[2]-x[1])^2+ (2.56494935746154+2*exp(-275*x[3])*x[2]-x[1])^2+ (2.4423470353692+2*exp(-275*x[3])*x[2]-x[1])^2+ (2.56494935746154+2*exp(-275*x[3])*x[2]-x[1])^2+ (2.52572864430826+2*exp(-275*x[3])*x[2]-x[1])^2+ (2.60268968544438+4*exp(-180*x[3])*x[2]-x[1])^2+ (2.86220088092947+4*exp(-180*x[3])*x[2]-x[1])^2+ (2.86220088092947+4*exp(-180*x[3])*x[2]-x[1])^2+ (2.60268968544438+4*exp(-180*x[3])*x[2]-x[1])^2+ (2.52572864430826+4*exp(-225*x[3])*x[2]-x[1])^2+ (2.52572864430826+4*exp(-225*x[3])*x[2]-x[1])^2+ (2.70805020110221+4*exp(-225*x[3])*x[2]-x[1])^2+ (2.56494935746154+4*exp(-225*x[3])*x[2]-x[1])^2+ (2.484906649788+4*exp(-250*x[3])*x[2]-x[1])^2+ (2.56494935746154+4*exp(-250*x[3])*x[2]-x[1])^2+ (2.484906649788+4*exp(-250*x[3])*x[2]-x[1])^2+ (2.60268968544438+4*exp(-250*x[3])*x[2]-x[1])^2+ (2.30258509299405+4*exp(-275*x[3])*x[2]-x[1])^2+ (2.4423470353692+4*exp(-275*x[3])*x[2]-x[1])^2+ (2.39789527279837+4*exp(-275*x[3])*x[2]-x[1])^2+ (2.2512917986065+4*exp(-275*x[3])*x[2]-x[1])^2+ (2.70805020110221+8*exp(-180*x[3])*x[2]-x[1])^2+ (2.70805020110221+8*exp(-180*x[3])*x[2]-x[1])^2+ (2.7408400239252+8*exp(-180*x[3])*x[2]-x[1])^2+ (2.77258872223978+8*exp(-180*x[3])*x[2]-x[1])^2+ (2.56494935746154+8*exp(-225*x[3])*x[2]-x[1])^2+ (2.35137525716348+8*exp(-225*x[3])*x[2]-x[1])^2+ (2.60268968544438+8*exp(-225*x[3])*x[2]-x[1])^2+ (2.63905732961526+8*exp(-225*x[3])*x[2]-x[1])^2+ (2.52572864430826+8*exp(-250*x[3])*x[2]-x[1])^2+ (2.484906649788+8*exp(-250*x[3])*x[2]-x[1])^2+ (2.4423470353692+8*exp(-250*x[3])*x[2]-x[1])^2+ (2.4423470353692+8*exp(-250*x[3])*x[2]-x[1])^2+ (1.87180217690159+8*exp(-275*x[3])*x[2]-x[1])^2+ (1.70474809223843+8*exp(-275*x[3])*x[2]-x[1])^2+ (1.79175946922805+8*exp(-275*x[3])*x[2]-x[1])^2+ (1.79175946922805+8*exp(-275*x[3])*x[2]-x[1])^2+ (2.91777073208428+16*exp(-180*x[3])*x[2]-x[1])^2+ (2.83321334405622+16*exp(-180*x[3])*x[2]-x[1])^2+ (2.72785282839839+16*exp(-180*x[3])*x[2]-x[1])^2+ (2.77258872223978+16*exp(-180*x[3])*x[2]-x[1])^2+ (2.56494935746154+16*exp(-225*x[3])*x[2]-x[1])^2+ (2.63905732961526+16*exp(-225*x[3])*x[2]-x[1])^2+ (2.52572864430826+16*exp(-225*x[3])*x[2]-x[1])^2+ (2.39789527279837+16*exp(-225*x[3])*x[2]-x[1])^2+ (2.484906649788+16*exp(-250*x[3])*x[2]-x[1])^2+ (2.484906649788+16*exp(-250*x[3])*x[2]-x[1])^2+ (2.4423470353692+16*exp(-250*x[3])*x[2]-x[1])^2+ (2.484906649788+16*exp(-250*x[3])*x[2]-x[1])^2+ (1.79175946922805+16*exp(-275*x[3])*x[2]-x[1])^2+ (1.79175946922805+16*exp(-275*x[3])*x[2]-x[1])^2+ (1.6094379124341+16*exp(-275*x[3])*x[2]-x[1])^2+ (1.70474809223843+16*exp(-275*x[3])*x[2]-x[1])^2+ (2.52572864430826+32*exp(-180*x[3])*x[2]-x[1])^2+ (2.56494935746154+32*exp(-180*x[3])*x[2]-x[1])^2+ (2.77258872223978+32*exp(-180*x[3])*x[2]-x[1])^2+ (2.484906649788+32*exp(-180*x[3])*x[2]-x[1])^2+ (2.39789527279837+32*exp(-225*x[3])*x[2]-x[1])^2+ (2.2512917986065+32*exp(-225*x[3])*x[2]-x[1])^2+ (2.39789527279837+32*exp(-225*x[3])*x[2]-x[1])^2+ (2.39789527279837+32*exp(-225*x[3])*x[2]-x[1])^2+ (2.39789527279837+32*exp(-250*x[3])*x[2]-x[1])^2+ (2.30258509299405+32*exp(-250*x[3])*x[2]-x[1])^2+ (2.35137525716348+32*exp(-250*x[3])*x[2]-x[1])^2+ (2.35137525716348+32*exp(-250*x[3])*x[2]-x[1])^2+ (0.993251773010283+32*exp(-275*x[3])*x[2]-x[1])^2+ (0.993251773010283+32*exp(-275*x[3])*x[2]-x[1])^2+ (0.916290731874155+32*exp(-275*x[3])*x[2]-x[1])^2+ (0.8754687373539+32*exp(-275*x[3])*x[2]-x[1])^2+ (2.56494935746154+48*exp(-180*x[3])*x[2]-x[1])^2+ (2.60268968544438+48*exp(-180*x[3])*x[2]-x[1])^2+ (2.80336038090653+48*exp(-180*x[3])*x[2]-x[1])^2+ (2.61006979274201+48*exp(-180*x[3])*x[2]-x[1])^2+ (2.4423470353692+48*exp(-225*x[3])*x[2]-x[1])^2+ (2.35137525716348+48*exp(-225*x[3])*x[2]-x[1])^2+ (2.60268968544438+48*exp(-225*x[3])*x[2]-x[1])^2+ (2.484906649788+48*exp(-225*x[3])*x[2]-x[1])^2+ (1.94591014905531+48*exp(-250*x[3])*x[2]-x[1])^2+ (1.93152141160321+48*exp(-250*x[3])*x[2]-x[1])^2+ (2.17475172148416+48*exp(-250*x[3])*x[2]-x[1])^2+ (2.06686275947298+48*exp(-250*x[3])*x[2]-x[1])^2+ (0.182321556793955+48*exp(-275*x[3])*x[2]-x[1])^2+ (0.405465108108164+48*exp(-275*x[3])*x[2]-x[1])^2+ (48*exp(-275*x[3])*x[2]-x[1])^2+ (0.405465108108164+48*exp(-275*x[3])*x[2]-x[1])^2+ (2.56494935746154+64*exp(-180*x[3])*x[2]-x[1])^2+ (2.52572864430826+64*exp(-180*x[3])*x[2]-x[1])^2+ (2.80336038090653+64*exp(-180*x[3])*x[2]-x[1])^2+ (2.77258872223978+64*exp(-180*x[3])*x[2]-x[1])^2+ (2.39789527279837+64*exp(-225*x[3])*x[2]-x[1])^2+ (2.4423470353692+64*exp(-225*x[3])*x[2]-x[1])^2+ (2.35137525716348+64*exp(-225*x[3])*x[2]-x[1])^2+ (2.30258509299405+64*exp(-225*x[3])*x[2]-x[1])^2+ (1.98375629154543+64*exp(-250*x[3])*x[2]-x[1])^2+ (2.01490302054226+64*exp(-250*x[3])*x[2]-x[1])^2+ (1.90210752639692+64*exp(-250*x[3])*x[2]-x[1])^2+ (2.02814824729229+64*exp(-250*x[3])*x[2]-x[1])^2+ (0.405465108108164+64*exp(-275*x[3])*x[2]-x[1])^2+ (64*exp(-275*x[3])*x[2]-x[1])^2+ (0.182321556793955+64*exp(-275*x[3])*x[2]-x[1])^2+ (0.182321556793955+64*exp(-275*x[3])*x[2]-x[1])^2)+x[4] == 0.0)


# ----- Objective ----- #
@objective(m, Min, x[4])
m = m 		 # model get returned when including this script. 
