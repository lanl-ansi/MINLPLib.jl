using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
@variable(m, x[x_Idx])


# ----- Constraints ----- #
@NLconstraint(m, e1, exp(-(0.0166666666666667* (x[1])^2+0.0166666666666667* (x[2])^2+0.0166666666666667* (x[3])^2+0.0166666666666667* (x[4])^2+0.0166666666666667* (x[5])^2+0.0166666666666667* (x[6])^2+0.0166666666666667* (x[7])^2+0.0166666666666667* (x[8])^2+0.0166666666666667* (x[9])^2+0.0166666666666667* (x[10])^2+0.0166666666666667* (x[11])^2+0.0166666666666667* (x[12])^2+0.0166666666666667* (x[13])^2+0.0166666666666667* (x[14])^2+0.0166666666666667* (x[15])^2+0.0166666666666667* (x[16])^2+0.0166666666666667* (x[17])^2+0.0166666666666667* (x[18])^2+0.0166666666666667* (x[19])^2+0.0166666666666667* (x[20])^2+0.0166666666666667* (x[21])^2+0.0166666666666667* (x[22])^2+0.0166666666666667* (x[23])^2+0.0166666666666667* (x[24])^2+0.0166666666666667* (x[25])^2+0.0166666666666667* (x[26])^2+0.0166666666666667* (x[27])^2+0.0166666666666667* (x[28])^2+0.0166666666666667* (x[29])^2+0.0166666666666667* (x[30])^2))+x[31] == 1.0)


# ----- Objective ----- #
@objective(m, Min, x[31])
m = m 		 # model get returned when including this script. 
