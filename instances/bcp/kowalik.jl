using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3, 4, 5]
@variable(m, x[x_Idx])
setlowerbound(x[1], 0.0)
setlowerbound(x[4], 0.0)
setlowerbound(x[2], 0.0)
setlowerbound(x[3], 0.0)
setupperbound(x[1], 0.42)
setupperbound(x[2], 0.42)
setupperbound(x[3], 0.42)
setupperbound(x[4], 0.42)


# ----- Constraints ----- #
@NLconstraint(m, e1, -( (0.1957-x[1]*(16+4*x[2])/(16+4*x[3]+x[4]))^2+ (0.1947-x[1]*(4+2*x[2])/(4+2*x[3]+x[4]))^2+ (0.1735-x[1]*(1+x[2])/(1+x[3]+x[4]))^2+ (0.16-x[1]*(0.25+0.5*x[2])/(0.25+0.5*x[3]+x[4]))^2+ (0.0844-x[1]*(0.0625+0.25*x[2])/(0.0625+0.25*x[3]+x[4]))^2+ (0.0627-x[1]*(0.0277777777777778+0.166666666666667*x[2])/(0.0277777777777778+0.166666666666667*x[3]+x[4]))^2+ (0.0456-x[1]*(0.015625+0.125*x[2])/(0.015625+0.125*x[3]+x[4]))^2+ (0.0342-x[1]*(0.01+0.1*x[2])/(0.01+0.1*x[3]+x[4]))^2+ (0.0323-x[1]*(0.00694444444444444+0.0833333333333333*x[2])/(0.00694444444444444+0.0833333333333333*x[3]+x[4]))^2+ (0.0235-x[1]*(0.00510204081632653+0.0714285714285714*x[2])/(0.00510204081632653+0.0714285714285714*x[3]+x[4]))^2+ (0.0246-x[1]*(0.00390625+0.0625*x[2])/(0.00390625+0.0625*x[3]+x[4]))^2)+x[5] == 0.0)


# ----- Objective ----- #
@objective(m, Min, x[5])
m = m 		 # model get returned when including this script. 
