using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 63]
@variable(m, x[x_Idx])
b_Idx = Any[23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
@variable(m, b[b_Idx])
setcategory(b[35], :Bin)
setcategory(b[38], :Bin)
setcategory(b[44], :Bin)
setcategory(b[42], :Bin)
setlowerbound(x[22], 0.0)
setcategory(b[49], :Bin)
setcategory(b[45], :Bin)
setcategory(b[41], :Bin)
setcategory(b[48], :Bin)
setlowerbound(x[2], 0.0)
setcategory(b[23], :Bin)
setlowerbound(x[9], 0.0)
setlowerbound(x[8], 0.0)
setcategory(b[54], :Bin)
setcategory(b[28], :Bin)
setcategory(b[36], :Bin)
setlowerbound(x[4], 0.0)
setlowerbound(x[3], 0.0)
setcategory(b[46], :Bin)
setcategory(b[53], :Bin)
setcategory(b[33], :Bin)
setcategory(b[56], :Bin)
setcategory(b[30], :Bin)
setcategory(b[29], :Bin)
setcategory(b[40], :Bin)
setlowerbound(x[5], 0.0)
setcategory(b[61], :Bin)
setcategory(b[58], :Bin)
setcategory(b[32], :Bin)
setcategory(b[34], :Bin)
setcategory(b[57], :Bin)
setlowerbound(x[1], 0.0)
setlowerbound(x[7], 0.0)
setcategory(b[60], :Bin)
setlowerbound(x[21], 0.0)
setlowerbound(x[10], 0.0)
setcategory(b[51], :Bin)
setcategory(b[43], :Bin)
setcategory(b[47], :Bin)
setcategory(b[25], :Bin)
setcategory(b[59], :Bin)
setcategory(b[39], :Bin)
setcategory(b[37], :Bin)
setcategory(b[50], :Bin)
setcategory(b[27], :Bin)
setlowerbound(x[6], 0.0)
setcategory(b[31], :Bin)
setcategory(b[62], :Bin)
setcategory(b[52], :Bin)
setcategory(b[24], :Bin)
setcategory(b[55], :Bin)
setcategory(b[26], :Bin)
setupperbound(x[1], 29.0)
setupperbound(x[2], 29.0)
setupperbound(x[3], 29.0)
setupperbound(x[4], 29.0)
setupperbound(x[5], 29.0)
setupperbound(x[6], 29.0)
setupperbound(x[7], 29.0)
setupperbound(x[8], 29.0)
setupperbound(x[9], 29.0)
setupperbound(x[10], 29.0)
setlowerbound(x[11], 1.0)
setupperbound(x[11], 40.0)
setlowerbound(x[12], 1.0)
setupperbound(x[12], 50.0)
setlowerbound(x[13], 1.0)
setupperbound(x[13], 60.0)
setlowerbound(x[14], 1.0)
setupperbound(x[14], 35.0)
setlowerbound(x[15], 1.0)
setupperbound(x[15], 75.0)
setlowerbound(x[16], 1.0)
setupperbound(x[16], 40.0)
setlowerbound(x[17], 1.0)
setupperbound(x[17], 50.0)
setlowerbound(x[18], 1.0)
setupperbound(x[18], 60.0)
setlowerbound(x[19], 1.0)
setupperbound(x[19], 35.0)
setlowerbound(x[20], 1.0)
setupperbound(x[20], 75.0)
setupperbound(x[21], 30.0)
setupperbound(x[22], 30.0)


# ----- Constraints ----- #
@constraint(m, e1, -2*x[21]-2*x[22]+x[63] == 0.0)
@constraint(m, e2, -x[1]-x[11]+x[21] >= 0.0)
@constraint(m, e3, -x[2]-x[12]+x[21] >= 0.0)
@constraint(m, e4, -x[3]-x[13]+x[21] >= 0.0)
@constraint(m, e5, -x[4]-x[14]+x[21] >= 0.0)
@constraint(m, e6, -x[5]-x[15]+x[21] >= 0.0)
@constraint(m, e7, -x[6]-x[16]+x[22] >= 0.0)
@constraint(m, e8, -x[7]-x[17]+x[22] >= 0.0)
@constraint(m, e9, -x[8]-x[18]+x[22] >= 0.0)
@constraint(m, e10, -x[9]-x[19]+x[22] >= 0.0)
@constraint(m, e11, -x[10]-x[20]+x[22] >= 0.0)
@NLconstraint(m, e12, 40/x[16]-x[11] <= 0.0)
@NLconstraint(m, e13, 50/x[17]-x[12] <= 0.0)
@NLconstraint(m, e14, 60/x[18]-x[13] <= 0.0)
@NLconstraint(m, e15, 35/x[19]-x[14] <= 0.0)
@NLconstraint(m, e16, 75/x[20]-x[15] <= 0.0)
@constraint(m, e17, x[1]-x[2]+x[11]+69*b[23] <= 69.0)
@constraint(m, e18, x[1]-x[3]+x[11]+69*b[24] <= 69.0)
@constraint(m, e19, x[1]-x[4]+x[11]+69*b[25] <= 69.0)
@constraint(m, e20, x[1]-x[5]+x[11]+69*b[26] <= 69.0)
@constraint(m, e21, x[2]-x[3]+x[12]+79*b[27] <= 79.0)
@constraint(m, e22, x[2]-x[4]+x[12]+79*b[28] <= 79.0)
@constraint(m, e23, x[2]-x[5]+x[12]+79*b[29] <= 79.0)
@constraint(m, e24, x[3]-x[4]+x[13]+89*b[30] <= 89.0)
@constraint(m, e25, x[3]-x[5]+x[13]+89*b[31] <= 89.0)
@constraint(m, e26, x[4]-x[5]+x[14]+64*b[32] <= 64.0)
@constraint(m, e27, -x[1]+x[2]+x[12]+79*b[33] <= 79.0)
@constraint(m, e28, -x[1]+x[3]+x[13]+89*b[34] <= 89.0)
@constraint(m, e29, -x[1]+x[4]+x[14]+64*b[35] <= 64.0)
@constraint(m, e30, -x[1]+x[5]+x[15]+104*b[36] <= 104.0)
@constraint(m, e31, -x[2]+x[3]+x[13]+89*b[37] <= 89.0)
@constraint(m, e32, -x[2]+x[4]+x[14]+64*b[38] <= 64.0)
@constraint(m, e33, -x[2]+x[5]+x[15]+104*b[39] <= 104.0)
@constraint(m, e34, -x[3]+x[4]+x[14]+64*b[40] <= 64.0)
@constraint(m, e35, -x[3]+x[5]+x[15]+104*b[41] <= 104.0)
@constraint(m, e36, -x[4]+x[5]+x[15]+104*b[42] <= 104.0)
@constraint(m, e37, x[6]-x[7]+x[16]+69*b[43] <= 69.0)
@constraint(m, e38, x[6]-x[8]+x[16]+69*b[44] <= 69.0)
@constraint(m, e39, x[6]-x[9]+x[16]+69*b[45] <= 69.0)
@constraint(m, e40, x[6]-x[10]+x[16]+69*b[46] <= 69.0)
@constraint(m, e41, x[7]-x[8]+x[17]+79*b[47] <= 79.0)
@constraint(m, e42, x[7]-x[9]+x[17]+79*b[48] <= 79.0)
@constraint(m, e43, x[7]-x[10]+x[17]+79*b[49] <= 79.0)
@constraint(m, e44, x[8]-x[9]+x[18]+89*b[50] <= 89.0)
@constraint(m, e45, x[8]-x[10]+x[18]+89*b[51] <= 89.0)
@constraint(m, e46, x[9]-x[10]+x[19]+64*b[52] <= 64.0)
@constraint(m, e47, -x[6]+x[7]+x[17]+79*b[53] <= 79.0)
@constraint(m, e48, -x[6]+x[8]+x[18]+89*b[54] <= 89.0)
@constraint(m, e49, -x[6]+x[9]+x[19]+64*b[55] <= 64.0)
@constraint(m, e50, -x[6]+x[10]+x[20]+104*b[56] <= 104.0)
@constraint(m, e51, -x[7]+x[8]+x[18]+89*b[57] <= 89.0)
@constraint(m, e52, -x[7]+x[9]+x[19]+64*b[58] <= 64.0)
@constraint(m, e53, -x[7]+x[10]+x[20]+104*b[59] <= 104.0)
@constraint(m, e54, -x[8]+x[9]+x[19]+64*b[60] <= 64.0)
@constraint(m, e55, -x[8]+x[10]+x[20]+104*b[61] <= 104.0)
@constraint(m, e56, -x[9]+x[10]+x[20]+104*b[62] <= 104.0)
@constraint(m, e57, b[23]+b[33]+b[43]+b[53] == 1.0)
@constraint(m, e58, b[24]+b[34]+b[44]+b[54] == 1.0)
@constraint(m, e59, b[25]+b[35]+b[45]+b[55] == 1.0)
@constraint(m, e60, b[26]+b[36]+b[46]+b[56] == 1.0)
@constraint(m, e61, b[27]+b[37]+b[47]+b[57] == 1.0)
@constraint(m, e62, b[28]+b[38]+b[48]+b[58] == 1.0)
@constraint(m, e63, b[29]+b[39]+b[49]+b[59] == 1.0)
@constraint(m, e64, b[30]+b[40]+b[50]+b[60] == 1.0)
@constraint(m, e65, b[31]+b[41]+b[51]+b[61] == 1.0)
@constraint(m, e66, b[32]+b[42]+b[52]+b[62] == 1.0)


# ----- Objective ----- #
@objective(m, Min, x[63])

m = m 		 # model get returned when including this script. 
